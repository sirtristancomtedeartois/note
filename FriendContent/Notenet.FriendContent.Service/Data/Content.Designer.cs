//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Notenet.FriendContent.Service.Data", "FK_Item_ItemType", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Notenet.FriendContent.Service.Data.ItemType), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Notenet.FriendContent.Service.Data.Item), true)]
[assembly: EdmRelationshipAttribute("Notenet.FriendContent.Service.Data", "FK_ItemHistory_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Notenet.FriendContent.Service.Data.Item), "ItemHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Notenet.FriendContent.Service.Data.ItemHistory), true)]
[assembly: EdmRelationshipAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermission_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Notenet.FriendContent.Service.Data.Item), "ItemPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Notenet.FriendContent.Service.Data.ItemPermission), true)]
[assembly: EdmRelationshipAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermissionSpecificUser_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Notenet.FriendContent.Service.Data.Item), "ItemPermissionSpecificUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Notenet.FriendContent.Service.Data.ItemPermissionSpecificUser), true)]
[assembly: EdmRelationshipAttribute("Notenet.FriendContent.Service.Data", "FK_ItemTag_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Notenet.FriendContent.Service.Data.Item), "ItemTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Notenet.FriendContent.Service.Data.ItemTag), true)]

#endregion

namespace Notenet.FriendContent.Service.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ContentEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ContentEntities object using the connection string found in the 'ContentEntities' section of the application configuration file.
        /// </summary>
        public ContentEntities() : base("name=ContentEntities", "ContentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContentEntities object.
        /// </summary>
        public ContentEntities(string connectionString) : base(connectionString, "ContentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContentEntities object.
        /// </summary>
        public ContentEntities(EntityConnection connection) : base(connection, "ContentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemHistory> ItemHistories
        {
            get
            {
                if ((_ItemHistories == null))
                {
                    _ItemHistories = base.CreateObjectSet<ItemHistory>("ItemHistories");
                }
                return _ItemHistories;
            }
        }
        private ObjectSet<ItemHistory> _ItemHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemPermission> ItemPermissions
        {
            get
            {
                if ((_ItemPermissions == null))
                {
                    _ItemPermissions = base.CreateObjectSet<ItemPermission>("ItemPermissions");
                }
                return _ItemPermissions;
            }
        }
        private ObjectSet<ItemPermission> _ItemPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemPermissionSpecificUser> ItemPermissionSpecificUsers
        {
            get
            {
                if ((_ItemPermissionSpecificUsers == null))
                {
                    _ItemPermissionSpecificUsers = base.CreateObjectSet<ItemPermissionSpecificUser>("ItemPermissionSpecificUsers");
                }
                return _ItemPermissionSpecificUsers;
            }
        }
        private ObjectSet<ItemPermissionSpecificUser> _ItemPermissionSpecificUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemTag> ItemTags
        {
            get
            {
                if ((_ItemTags == null))
                {
                    _ItemTags = base.CreateObjectSet<ItemTag>("ItemTags");
                }
                return _ItemTags;
            }
        }
        private ObjectSet<ItemTag> _ItemTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemHistories(ItemHistory itemHistory)
        {
            base.AddObject("ItemHistories", itemHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemPermissions(ItemPermission itemPermission)
        {
            base.AddObject("ItemPermissions", itemPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemPermissionSpecificUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemPermissionSpecificUsers(ItemPermissionSpecificUser itemPermissionSpecificUser)
        {
            base.AddObject("ItemPermissionSpecificUsers", itemPermissionSpecificUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTags(ItemTag itemTag)
        {
            base.AddObject("ItemTags", itemTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="externalUrl">Initial value of the ExternalUrl property.</param>
        /// <param name="internalUrl">Initial value of the InternalUrl property.</param>
        /// <param name="itemTitle">Initial value of the ItemTitle property.</param>
        /// <param name="itemAbstract">Initial value of the ItemAbstract property.</param>
        /// <param name="itemText">Initial value of the ItemText property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Item CreateItem(global::System.Guid itemID, global::System.Byte itemTypeID, global::System.String externalUrl, global::System.String internalUrl, global::System.String itemTitle, global::System.String itemAbstract, global::System.String itemText, global::System.DateTime createdDate, global::System.DateTime lastUpdated)
        {
            Item item = new Item();
            item.ItemID = itemID;
            item.ItemTypeID = itemTypeID;
            item.ExternalUrl = externalUrl;
            item.InternalUrl = internalUrl;
            item.ItemTitle = itemTitle;
            item.ItemAbstract = itemAbstract;
            item.ItemText = itemText;
            item.CreatedDate = createdDate;
            item.LastUpdated = lastUpdated;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                OnItemTypeIDChanging(value);
                ReportPropertyChanging("ItemTypeID");
                _ItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemTypeID");
                OnItemTypeIDChanged();
            }
        }
        private global::System.Byte _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Byte value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalUrl
        {
            get
            {
                return _ExternalUrl;
            }
            set
            {
                OnExternalUrlChanging(value);
                ReportPropertyChanging("ExternalUrl");
                _ExternalUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExternalUrl");
                OnExternalUrlChanged();
            }
        }
        private global::System.String _ExternalUrl;
        partial void OnExternalUrlChanging(global::System.String value);
        partial void OnExternalUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InternalUrl
        {
            get
            {
                return _InternalUrl;
            }
            set
            {
                OnInternalUrlChanging(value);
                ReportPropertyChanging("InternalUrl");
                _InternalUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InternalUrl");
                OnInternalUrlChanged();
            }
        }
        private global::System.String _InternalUrl;
        partial void OnInternalUrlChanging(global::System.String value);
        partial void OnInternalUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTitle
        {
            get
            {
                return _ItemTitle;
            }
            set
            {
                OnItemTitleChanging(value);
                ReportPropertyChanging("ItemTitle");
                _ItemTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTitle");
                OnItemTitleChanged();
            }
        }
        private global::System.String _ItemTitle;
        partial void OnItemTitleChanging(global::System.String value);
        partial void OnItemTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemAbstract
        {
            get
            {
                return _ItemAbstract;
            }
            set
            {
                OnItemAbstractChanging(value);
                ReportPropertyChanging("ItemAbstract");
                _ItemAbstract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemAbstract");
                OnItemAbstractChanged();
            }
        }
        private global::System.String _ItemAbstract;
        partial void OnItemAbstractChanging(global::System.String value);
        partial void OnItemAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemText
        {
            get
            {
                return _ItemText;
            }
            set
            {
                OnItemTextChanging(value);
                ReportPropertyChanging("ItemText");
                _ItemText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemText");
                OnItemTextChanged();
            }
        }
        private global::System.String _ItemText;
        partial void OnItemTextChanging(global::System.String value);
        partial void OnItemTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdated
        {
            get
            {
                return _LastUpdated;
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.DateTime _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.DateTime value);
        partial void OnLastUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_Item_ItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemHistory_Item", "ItemHistory")]
        public EntityCollection<ItemHistory> ItemHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemHistory>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "ItemHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemHistory>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "ItemHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermission_Item", "ItemPermission")]
        public EntityCollection<ItemPermission> ItemPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemPermission>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "ItemPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemPermission>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "ItemPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermissionSpecificUser_Item", "ItemPermissionSpecificUser")]
        public EntityCollection<ItemPermissionSpecificUser> ItemPermissionSpecificUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemPermissionSpecificUser>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "ItemPermissionSpecificUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemPermissionSpecificUser>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "ItemPermissionSpecificUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemTag_Item", "ItemTag")]
        public EntityCollection<ItemTag> ItemTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemTag>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "ItemTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemTag>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "ItemTag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="ItemHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemHistory object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="revisionDate">Initial value of the RevisionDate property.</param>
        /// <param name="itemTitle">Initial value of the ItemTitle property.</param>
        /// <param name="itemAbstract">Initial value of the ItemAbstract property.</param>
        /// <param name="itemText">Initial value of the ItemText property.</param>
        /// <param name="modifiedBy">Initial value of the ModifiedBy property.</param>
        public static ItemHistory CreateItemHistory(global::System.Guid itemID, global::System.DateTime revisionDate, global::System.String itemTitle, global::System.String itemAbstract, global::System.String itemText, global::System.Guid modifiedBy)
        {
            ItemHistory itemHistory = new ItemHistory();
            itemHistory.ItemID = itemID;
            itemHistory.RevisionDate = revisionDate;
            itemHistory.ItemTitle = itemTitle;
            itemHistory.ItemAbstract = itemAbstract;
            itemHistory.ItemText = itemText;
            itemHistory.ModifiedBy = modifiedBy;
            return itemHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RevisionDate
        {
            get
            {
                return _RevisionDate;
            }
            set
            {
                if (_RevisionDate != value)
                {
                    OnRevisionDateChanging(value);
                    ReportPropertyChanging("RevisionDate");
                    _RevisionDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RevisionDate");
                    OnRevisionDateChanged();
                }
            }
        }
        private global::System.DateTime _RevisionDate;
        partial void OnRevisionDateChanging(global::System.DateTime value);
        partial void OnRevisionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTitle
        {
            get
            {
                return _ItemTitle;
            }
            set
            {
                OnItemTitleChanging(value);
                ReportPropertyChanging("ItemTitle");
                _ItemTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTitle");
                OnItemTitleChanged();
            }
        }
        private global::System.String _ItemTitle;
        partial void OnItemTitleChanging(global::System.String value);
        partial void OnItemTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemAbstract
        {
            get
            {
                return _ItemAbstract;
            }
            set
            {
                OnItemAbstractChanging(value);
                ReportPropertyChanging("ItemAbstract");
                _ItemAbstract = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemAbstract");
                OnItemAbstractChanged();
            }
        }
        private global::System.String _ItemAbstract;
        partial void OnItemAbstractChanging(global::System.String value);
        partial void OnItemAbstractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemText
        {
            get
            {
                return _ItemText;
            }
            set
            {
                OnItemTextChanging(value);
                ReportPropertyChanging("ItemText");
                _ItemText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemText");
                OnItemTextChanged();
            }
        }
        private global::System.String _ItemText;
        partial void OnItemTextChanging(global::System.String value);
        partial void OnItemTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.Guid _ModifiedBy;
        partial void OnModifiedByChanging(global::System.Guid value);
        partial void OnModifiedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemHistory_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemHistory_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="ItemPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemPermission object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="roleType">Initial value of the RoleType property.</param>
        /// <param name="rolePermission">Initial value of the RolePermission property.</param>
        /// <param name="hasSpecificUserIDPermission">Initial value of the HasSpecificUserIDPermission property.</param>
        public static ItemPermission CreateItemPermission(global::System.Guid itemID, global::System.Byte roleType, global::System.Byte rolePermission, global::System.Boolean hasSpecificUserIDPermission)
        {
            ItemPermission itemPermission = new ItemPermission();
            itemPermission.ItemID = itemID;
            itemPermission.RoleType = roleType;
            itemPermission.RolePermission = rolePermission;
            itemPermission.HasSpecificUserIDPermission = hasSpecificUserIDPermission;
            return itemPermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                if (_RoleType != value)
                {
                    OnRoleTypeChanging(value);
                    ReportPropertyChanging("RoleType");
                    _RoleType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleType");
                    OnRoleTypeChanged();
                }
            }
        }
        private global::System.Byte _RoleType;
        partial void OnRoleTypeChanging(global::System.Byte value);
        partial void OnRoleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte RolePermission
        {
            get
            {
                return _RolePermission;
            }
            set
            {
                OnRolePermissionChanging(value);
                ReportPropertyChanging("RolePermission");
                _RolePermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RolePermission");
                OnRolePermissionChanged();
            }
        }
        private global::System.Byte _RolePermission;
        partial void OnRolePermissionChanging(global::System.Byte value);
        partial void OnRolePermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasSpecificUserIDPermission
        {
            get
            {
                return _HasSpecificUserIDPermission;
            }
            set
            {
                OnHasSpecificUserIDPermissionChanging(value);
                ReportPropertyChanging("HasSpecificUserIDPermission");
                _HasSpecificUserIDPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasSpecificUserIDPermission");
                OnHasSpecificUserIDPermissionChanged();
            }
        }
        private global::System.Boolean _HasSpecificUserIDPermission;
        partial void OnHasSpecificUserIDPermissionChanging(global::System.Boolean value);
        partial void OnHasSpecificUserIDPermissionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermission_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermission_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="ItemPermissionSpecificUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemPermissionSpecificUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemPermissionSpecificUser object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userPermission">Initial value of the UserPermission property.</param>
        public static ItemPermissionSpecificUser CreateItemPermissionSpecificUser(global::System.Guid itemID, global::System.Guid userID, global::System.Byte userPermission)
        {
            ItemPermissionSpecificUser itemPermissionSpecificUser = new ItemPermissionSpecificUser();
            itemPermissionSpecificUser.ItemID = itemID;
            itemPermissionSpecificUser.UserID = userID;
            itemPermissionSpecificUser.UserPermission = userPermission;
            return itemPermissionSpecificUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte UserPermission
        {
            get
            {
                return _UserPermission;
            }
            set
            {
                OnUserPermissionChanging(value);
                ReportPropertyChanging("UserPermission");
                _UserPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserPermission");
                OnUserPermissionChanged();
            }
        }
        private global::System.Byte _UserPermission;
        partial void OnUserPermissionChanging(global::System.Byte value);
        partial void OnUserPermissionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemPermissionSpecificUser_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemPermissionSpecificUser_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="ItemTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemTag object.
        /// </summary>
        /// <param name="ownerID">Initial value of the OwnerID property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        public static ItemTag CreateItemTag(global::System.Guid ownerID, global::System.String tag, global::System.Guid itemID)
        {
            ItemTag itemTag = new ItemTag();
            itemTag.OwnerID = ownerID;
            itemTag.Tag = tag;
            itemTag.ItemID = itemID;
            return itemTag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OwnerID
        {
            get
            {
                return _OwnerID;
            }
            set
            {
                if (_OwnerID != value)
                {
                    OnOwnerIDChanging(value);
                    ReportPropertyChanging("OwnerID");
                    _OwnerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OwnerID");
                    OnOwnerIDChanged();
                }
            }
        }
        private global::System.Guid _OwnerID;
        partial void OnOwnerIDChanging(global::System.Guid value);
        partial void OnOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                if (_Tag != value)
                {
                    OnTagChanging(value);
                    ReportPropertyChanging("Tag");
                    _Tag = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Tag");
                    OnTagChanged();
                }
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_ItemTag_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Notenet.FriendContent.Service.Data.FK_ItemTag_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        public static ItemType CreateItemType(global::System.Byte itemTypeID, global::System.String itemTypeName)
        {
            ItemType itemType = new ItemType();
            itemType.ItemTypeID = itemTypeID;
            itemType.ItemTypeName = itemTypeName;
            return itemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                if (_ItemTypeID != value)
                {
                    OnItemTypeIDChanging(value);
                    ReportPropertyChanging("ItemTypeID");
                    _ItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeID");
                    OnItemTypeIDChanged();
                }
            }
        }
        private global::System.Byte _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Byte value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Notenet.FriendContent.Service.Data", "FK_Item_ItemType", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("Notenet.FriendContent.Service.Data.FK_Item_ItemType", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Notenet.FriendContent.Service.Data", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }

    #endregion
    
}
