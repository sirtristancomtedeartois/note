//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace endnote.Tests
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using endnote.Tests.Services;
    using Microsoft.VisualStudio.TestTools.UnitTesting;


    public class ContentServiceTestCoded : WebTest
    {

        public ContentServiceTestCoded()
        {
            this.PreAuthenticate = true;
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            WebTestRequest request = new WebTestRequest("http://www.myxyz.com:8008/Account/LogOn");
            request.Encoding = System.Text.Encoding.GetEncoding("utf-8");
            request.QueryStringParameters.Add("UserName", "testtest", false, false);
            request.QueryStringParameters.Add("Password", "123@qwe", false, false);
            //request.ValidateResponse += new EventHandler<ValidationEventArgs>(request_ValidateResponse);
            yield return request;
            request = null;

            WebTestRequest request1 = new WebTestRequest(Common.contentDomain + "GetUserTagList");
            request1.Encoding = System.Text.Encoding.GetEncoding("utf-8");
            request1.ValidateResponse += new EventHandler<ValidationEventArgs>(request1_ValidateResponse);
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest(Common.userDomain + "GetUserTagItemList");
            request2.Encoding = System.Text.Encoding.GetEncoding("utf-8");
            request2.QueryStringParameters.Add("Tag", "", false, false);
            request2.ValidateResponse += new EventHandler<ValidationEventArgs>(request2_ValidateResponse);
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest(Common.userDomain + "GetUserItemContent");
            request3.Encoding = System.Text.Encoding.GetEncoding("utf-8");
            request3.QueryStringParameters.Add("ItemID", "", false, false);
            request3.ValidateResponse += new EventHandler<ValidationEventArgs>(request3_ValidateResponse);
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest(Common.userDomain + "PutItem");
            request4.Encoding = System.Text.Encoding.GetEncoding("utf-8");
            request4.QueryStringParameters.Add("Item", "", false, false);
            request4.ValidateResponse += new EventHandler<ValidationEventArgs>(request4_ValidateResponse);
            yield return request4;
            request4 = null;
        }

        void request1_ValidateResponse(object sender, ValidationEventArgs e)
        {
            Assert.AreEqual(e.Response.BodyString, "");
        }

        void request2_ValidateResponse(object sender, ValidationEventArgs e)
        {
            Assert.AreEqual(e.Response.BodyString, "[]");
        }

        void request3_ValidateResponse(object sender, ValidationEventArgs e)
        {
            Assert.AreEqual(e.Response.BodyString, "false");
        }

        void request4_ValidateResponse(object sender, ValidationEventArgs e)
        {
            Assert.AreEqual(e.Response.BodyString, "true");
        }
    }
}
